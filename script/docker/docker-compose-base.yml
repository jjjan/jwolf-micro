#
version: "3.2"
services:
  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    networks:
      - jwolf
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_USER=test
      - MYSQL_PASSWORD=123456
    command: --default-authentication-plugin=mysql_native_password  #解决MYSQL客户端工具无法远程连接等问题
    user: root
    volumes:
      - /home/data/mysql:/var/lib/mysql
      - /var/lib/mysql-files:/var/lib/mysql-files
      - /etc/localtime:/etc/localtime
      - /etc/my.cnf:/etc/mysql/my.cnf

  nacos:
    image: nacos/nacos-server
    container_name: nacos
    restart: on-failure
    networks:
      - jwolf
    ports:
      - 8848:8848
      - 9848:9848    #2.x grpc需要暴露的两个端口
      - 9849:9849
    environment:
      - PREFER_HOST_MODE=ip
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - NACOS_AUTH_ENABLE=true    #java client需要账号密码且该账号要设置权限，即便是内置的nacos用户
      - MYSQL_SERVICE_HOST=mysql   #这里docker dns会解析为mysql容器的jwolf网络IP
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_DB_NAME=nacos
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=123456
    depends_on:
      - mysql                      #使用mysql储存配置信息，故其依赖于mysql
  #https://seata.io/zh-cn/docs/ops/deploy-by-docker.html
  seata-server:
    image: seataio/seata-server
    container_name: seata-server
    restart: always
    ports:
      - "8091:8091"
    environment:
      - SEATA_CONFIG_NAME=file:/root/seata-config/registry
    volumes:
      - /etc/seata/config:/root/seata-config
    networks:
      - jwolf
    depends_on:
      - nacos
      - mysql

# docker run --name sentinel -d -p 8101:8858 -p 8719:8719 -d bladex/sentinel-dashboard
  sentinel:
    image: bladex/sentinel-dashboard
    container_name: sentinel
    restart: on-failure
    networks:
      - jwolf
    ports:
      - 8719:8719
      - 8858:8858
    depends_on:
      - nacos


#docker run -d --name xxl-job-admin -v /root/application.properties:/application.properties -v /data/applogs:/data/applogs  -p 8088:8080 -e PARAMS='--spring.config.location=/application.properties' xuxueli/xxl-job-admin:2.1.2
  xxl-job-admin:
    image: xuxueli/xxl-job-admin:2.3.0
    container_name: xxl-job-admin
    restart: on-failure
    ports:
      - "8180:8080"
    environment: # 注意这里是不是-PARAMS=XXX 否则连接不上DB
      PARAMS: "--spring.datasource.url=jdbc:mysql://mysql:3306/xxl_job?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai \
        --spring.datasource.username=root  \
        --spring.datasource.password=123456 \
        --xxl.job.login.username=admin  \
        --xxl.job.login.password=123456"
    volumes:
      - /home/data/xxl-job-admin:/data/applogs
    networks:
      - jwolf
    depends_on:
      - mysql

  redis:
    image: redis:6.2.6
    container_name: redis
    restart: always
    networks:
      - jwolf
    ports:
      - 6379:6379
    volumes:
      - /etc/redis/redis.conf:/usr/local/etc/redis/redis.conf  #容器内不存在/usr/local/etc/redis/redis.conf 可手动创建/etc/redis/redis.conf 与之映射 command 指定该目录
      - /home/data/redis-data:/data
    command: "redis-server /usr/local/etc/redis/redis.conf"

  nginx:
    image: nginx
    container_name: nginx
    restart: always
    networks:
      - jwolf
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/nginx:/etc/nginx
      - /home/logs/nginxLog:/var/log/nginx    #nginx.conf配置日志地址/var/log/nginx 与静态资源目录/home
      - /home/data/web:/home
    environment:
      - TZ=Asia/Shanghai


networks:
  jwolf:
    driver: bridge

