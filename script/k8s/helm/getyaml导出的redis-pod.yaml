
# 导出方式 kubectl get pod/redis-master-0 -n jwolf -o yaml >redis-pod.yaml

apiVersion: v1
kind: Pod
metadata:
  annotations:
    checksum/configmap: 3c7a85407ba541f457d3bdc93077dfe3dac665ff8f22b526f9e4676c9a27645b
    checksum/health: 6d05aeb49db0f20971d76314301cbca2ee87fe6ea97238898d38d474538558d6
    checksum/scripts: 0da13d37da249d058d291eab8b530d18c2b2496c12f67b6e9113a83e438d79b8
    checksum/secret: 00b946d95d3307b37e1a1bc4bbc587d61f1d44f1274a0e27d59c006c3c94271c
  creationTimestamp: "2022-01-04T16:31:17Z"
  generateName: redis-master-
  labels:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: redis
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    controller-revision-hash: redis-master-685985b857
    helm.sh/chart: redis-15.6.8
    statefulset.kubernetes.io/pod-name: redis-master-0
  name: redis-master-0
  namespace: jwolf
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: redis-master
    uid: 48589101-40f7-4557-8db1-02c50b7ceea2
  resourceVersion: "224624"
  selfLink: /api/v1/namespaces/jwolf/pods/redis-master-0
  uid: a5e31af8-b89f-4f1a-ba5a-ce31d5e3c204
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: master
              app.kubernetes.io/instance: redis
              app.kubernetes.io/name: redis
          namespaces:
          - jwolf
          topologyKey: kubernetes.io/hostname
        weight: 1
  containers:
  - args:
    - -c
    - /opt/bitnami/scripts/start-scripts/start-master.sh
    command:
    - /bin/bash
    env:
    - name: BITNAMI_DEBUG
      value: "false"
    - name: REDIS_REPLICATION_MODE
      value: master
    - name: ALLOW_EMPTY_PASSWORD
      value: "no"
    - name: REDIS_PASSWORD
      valueFrom:
        secretKeyRef:
          key: redis-password
          name: redis
    - name: REDIS_TLS_ENABLED
      value: "no"
    - name: REDIS_PORT
      value: "6379"
    image: docker.io/bitnami/redis:6.2.6-debian-10-r53
    imagePullPolicy: IfNotPresent
    livenessProbe:
      exec:
        command:
        - sh
        - -c
        - /health/ping_liveness_local.sh 5
      failureThreshold: 5
      initialDelaySeconds: 20
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 6
    name: redis
    ports:
    - containerPort: 6379
      name: redis
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - sh
        - -c
        - /health/ping_readiness_local.sh 1
      failureThreshold: 5
      initialDelaySeconds: 20
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 2
    resources: {}
    securityContext:
      runAsUser: 1001
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /opt/bitnami/scripts/start-scripts
      name: start-scripts
    - mountPath: /health
      name: health
    - mountPath: /data
      name: redis-data
    - mountPath: /opt/bitnami/redis/mounted-etc
      name: config
    - mountPath: /opt/bitnami/redis/etc/
      name: redis-tmp-conf
    - mountPath: /tmp
      name: tmp
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: redis-token-4ds8t
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: redis-master-0
  nodeName: node2
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1001
  serviceAccount: redis
  serviceAccountName: redis
  subdomain: redis-headless
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - configMap:
      defaultMode: 493
      name: redis-scripts
    name: start-scripts
  - configMap:
      defaultMode: 493
      name: redis-health
    name: health
  - configMap:
      defaultMode: 420
      name: redis-configuration
    name: config
  - emptyDir: {}
    name: redis-tmp-conf
  - emptyDir: {}
    name: tmp
  - name: redis-data
    persistentVolumeClaim:
      claimName: redis-datadir-pvc-1
  - name: redis-token-4ds8t
    secret:
      defaultMode: 420
      secretName: redis-token-4ds8t
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2022-01-04T16:31:17Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2022-01-06T14:20:53Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2022-01-06T14:20:53Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2022-01-04T16:31:17Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://f2d047543caf0a6ed1c332380a464c2d84669a994466bb73032e91596942d320
    image: docker.io/bitnami/redis:6.2.6-debian-10-r53
    imageID: docker-pullable://docker.io/bitnami/redis@sha256:5c14298baea515f4317aa2ab85eaadf119cc49c17e0ad2e1e87aeab87a4431d2
    lastState:
      terminated:
        containerID: docker://201550684d8d4347e6b42ebc20d52322f1ee507d1647d1392305173de8c93631
        exitCode: 255
        finishedAt: "2022-01-06T14:19:43Z"
        reason: Error
        startedAt: "2022-01-05T13:33:00Z"
    name: redis
    ready: true
    restartCount: 2
    state:
      running:
        startedAt: "2022-01-06T14:20:31Z"
  hostIP: 192.168.1.20
  phase: Running
  podIP: 10.244.1.22
  qosClass: BestEffort
  startTime: "2022-01-04T16:31:17Z"
